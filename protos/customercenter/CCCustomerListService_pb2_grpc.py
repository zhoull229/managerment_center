# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import CCCommonMessage_pb2 as CCCommonMessage__pb2
import CCCustomerListService_pb2 as CCCustomerListService__pb2


class CustomerListServiceStub(object):
  """客户列表
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.searchCustomer = channel.unary_unary(
        '/customercenter.CustomerListService/searchCustomer',
        request_serializer=CCCustomerListService__pb2.RequestCustomerSearch.SerializeToString,
        response_deserializer=CCCommonMessage__pb2.CCBatchDataPageMsg.FromString,
        )
    self.insertCustomer = channel.unary_unary(
        '/customercenter.CustomerListService/insertCustomer',
        request_serializer=CCCustomerListService__pb2.RequestCustomerInsert.SerializeToString,
        response_deserializer=CCCustomerListService__pb2.InsertReply.FromString,
        )
    self.editCustomer = channel.unary_unary(
        '/customercenter.CustomerListService/editCustomer',
        request_serializer=CCCustomerListService__pb2.RequestCustomerEdit.SerializeToString,
        response_deserializer=CCCommonMessage__pb2.ReplyMsg.FromString,
        )
    self.updateCustomer = channel.unary_unary(
        '/customercenter.CustomerListService/updateCustomer',
        request_serializer=CCCustomerListService__pb2.RequestCustomerUpdate.SerializeToString,
        response_deserializer=CCCustomerListService__pb2.BooleanReply.FromString,
        )
    self.deleteCustomer = channel.unary_unary(
        '/customercenter.CustomerListService/deleteCustomer',
        request_serializer=CCCustomerListService__pb2.RequestCustomerDelete.SerializeToString,
        response_deserializer=CCCustomerListService__pb2.BooleanReply.FromString,
        )
    self.listOrgani = channel.unary_unary(
        '/customercenter.CustomerListService/listOrgani',
        request_serializer=CCCustomerListService__pb2.RequestListOrgani.SerializeToString,
        response_deserializer=CCCommonMessage__pb2.CCBatchDataPageMsg.FromString,
        )
    self.searchOrgani = channel.unary_unary(
        '/customercenter.CustomerListService/searchOrgani',
        request_serializer=CCCustomerListService__pb2.RequestSearchOrgani.SerializeToString,
        response_deserializer=CCCommonMessage__pb2.ReplyMsg.FromString,
        )
    self.insertOrgani = channel.unary_unary(
        '/customercenter.CustomerListService/insertOrgani',
        request_serializer=CCCustomerListService__pb2.RequestInsertOrgani.SerializeToString,
        response_deserializer=CCCustomerListService__pb2.BooleanReply.FromString,
        )
    self.editOrgani = channel.unary_unary(
        '/customercenter.CustomerListService/editOrgani',
        request_serializer=CCCustomerListService__pb2.RequestEditOrgani.SerializeToString,
        response_deserializer=CCCommonMessage__pb2.ReplyMsg.FromString,
        )
    self.updateOrgani = channel.unary_unary(
        '/customercenter.CustomerListService/updateOrgani',
        request_serializer=CCCustomerListService__pb2.RequestUpdateOrgani.SerializeToString,
        response_deserializer=CCCustomerListService__pb2.BooleanReply.FromString,
        )
    self.deleteOrgani = channel.unary_unary(
        '/customercenter.CustomerListService/deleteOrgani',
        request_serializer=CCCustomerListService__pb2.RequestDeleteOrgani.SerializeToString,
        response_deserializer=CCCustomerListService__pb2.BooleanReply.FromString,
        )
    self.updateBusinessStatus = channel.unary_unary(
        '/customercenter.CustomerListService/updateBusinessStatus',
        request_serializer=CCCustomerListService__pb2.RequestUpdateBusiness.SerializeToString,
        response_deserializer=CCCustomerListService__pb2.BooleanReply.FromString,
        )
    self.listBusinessInfo = channel.unary_unary(
        '/customercenter.CustomerListService/listBusinessInfo',
        request_serializer=CCCustomerListService__pb2.RequestListBusinessInfo.SerializeToString,
        response_deserializer=CCCommonMessage__pb2.CCBatchDataPageMsg.FromString,
        )
    self.addUnderLingSchool = channel.unary_unary(
        '/customercenter.CustomerListService/addUnderLingSchool',
        request_serializer=CCCustomerListService__pb2.RequestAddUnderLingSchool.SerializeToString,
        response_deserializer=CCCustomerListService__pb2.BooleanReply.FromString,
        )
    self.deleteUnderLingSchool = channel.unary_unary(
        '/customercenter.CustomerListService/deleteUnderLingSchool',
        request_serializer=CCCustomerListService__pb2.RequestDeleteUnderLingSchool.SerializeToString,
        response_deserializer=CCCustomerListService__pb2.BooleanReply.FromString,
        )
    self.listSchool = channel.unary_unary(
        '/customercenter.CustomerListService/listSchool',
        request_serializer=CCCustomerListService__pb2.RequestListSchool.SerializeToString,
        response_deserializer=CCCommonMessage__pb2.ReplyMsg.FromString,
        )
    self.listCommonConfig = channel.unary_unary(
        '/customercenter.CustomerListService/listCommonConfig',
        request_serializer=CCCustomerListService__pb2.RequestCommonConfig.SerializeToString,
        response_deserializer=CCCommonMessage__pb2.ReplyMsg.FromString,
        )
    self.selectCustomerNumByIdParam = channel.unary_unary(
        '/customercenter.CustomerListService/selectCustomerNumByIdParam',
        request_serializer=CCCustomerListService__pb2.RequestSelectCustomerNumByIdParam.SerializeToString,
        response_deserializer=CCCustomerListService__pb2.ResponseSelectCustomerNumByIdParam.FromString,
        )
    self.listSchoolByIdParam = channel.unary_unary(
        '/customercenter.CustomerListService/listSchoolByIdParam',
        request_serializer=CCCustomerListService__pb2.RequestListSchoolByIdParam.SerializeToString,
        response_deserializer=CCCustomerListService__pb2.ResponseListSchoolByIdParam.FromString,
        )
    self.updateRelationByIdParam = channel.unary_unary(
        '/customercenter.CustomerListService/updateRelationByIdParam',
        request_serializer=CCCustomerListService__pb2.RequestUpdateRelationByIdParam.SerializeToString,
        response_deserializer=CCCustomerListService__pb2.BooleanReply.FromString,
        )
    self.selectCustomerInfo = channel.unary_unary(
        '/customercenter.CustomerListService/selectCustomerInfo',
        request_serializer=CCCustomerListService__pb2.RequestSelectCustomerInfo.SerializeToString,
        response_deserializer=CCCommonMessage__pb2.ReplyMsg.FromString,
        )
    self.listCustomerByCustomerType = channel.unary_unary(
        '/customercenter.CustomerListService/listCustomerByCustomerType',
        request_serializer=CCCustomerListService__pb2.RequestListCustomerByCustomerType.SerializeToString,
        response_deserializer=CCCommonMessage__pb2.ReplyMsg.FromString,
        )
    self.listUnderLingSchoolAllInfo = channel.unary_unary(
        '/customercenter.CustomerListService/listUnderLingSchoolAllInfo',
        request_serializer=CCCustomerListService__pb2.RequestListUnderLingSchoolAllInfo.SerializeToString,
        response_deserializer=CCCommonMessage__pb2.ReplyMsg.FromString,
        )
    self.listPcustomer = channel.unary_unary(
        '/customercenter.CustomerListService/listPcustomer',
        request_serializer=CCCustomerListService__pb2.RequestListPcustomer.SerializeToString,
        response_deserializer=CCCommonMessage__pb2.ReplyMsg.FromString,
        )
    self.listUnderLingSchool = channel.unary_unary(
        '/customercenter.CustomerListService/listUnderLingSchool',
        request_serializer=CCCustomerListService__pb2.RequestListUnderLingSchool.SerializeToString,
        response_deserializer=CCCommonMessage__pb2.ReplyMsg.FromString,
        )
    self.fuzzyQueryCustomer = channel.unary_unary(
        '/customercenter.CustomerListService/fuzzyQueryCustomer',
        request_serializer=CCCustomerListService__pb2.RequestFuzzyQueryCustomer.SerializeToString,
        response_deserializer=CCCommonMessage__pb2.ReplyMsg.FromString,
        )
    self.getCustomerInfo = channel.unary_unary(
        '/customercenter.CustomerListService/getCustomerInfo',
        request_serializer=CCCustomerListService__pb2.RequestCustomerInfo.SerializeToString,
        response_deserializer=CCCustomerListService__pb2.RespCustomerInfo.FromString,
        )


class CustomerListServiceServicer(object):
  """客户列表
  """

  def searchCustomer(self, request, context):
    """查询客户信息
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def insertCustomer(self, request, context):
    """新增客户信息
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def editCustomer(self, request, context):
    """编辑客户信息
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def updateCustomer(self, request, context):
    """更新客户信息
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def deleteCustomer(self, request, context):
    """删除客户信息
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def listOrgani(self, request, context):
    """组织机构列表查询
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def searchOrgani(self, request, context):
    """组织机构查询
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def insertOrgani(self, request, context):
    """新增组织机构信息
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def editOrgani(self, request, context):
    """编辑组织机构信息
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def updateOrgani(self, request, context):
    """更新组织机构信息
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def deleteOrgani(self, request, context):
    """删除组织机构信息
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def updateBusinessStatus(self, request, context):
    """根据客户id更新业务状态
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def listBusinessInfo(self, request, context):
    """业务管理列表查询(根据客户id)
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def addUnderLingSchool(self, request, context):
    """增加下属学校
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def deleteUnderLingSchool(self, request, context):
    """删除下属学校
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def listSchool(self, request, context):
    """列出所有学校
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def listCommonConfig(self, request, context):
    """rpc listBusinessInfoByCustomerId (RequestListBusinessInfo) returns (BusinessList){}
    查询配置信息 1、客户类别 2、区域类别 3、区域等级 4、业务类别。
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def selectCustomerNumByIdParam(self, request, context):
    """根据运营经理id  查询他的客户数量,学校数量,学校id数组   暂为基础管理中心提供
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def listSchoolByIdParam(self, request, context):
    """根据运营经理id  查询他所负责的所有学校名称(包括教育局，教育集团)及学校所属客户名称   暂为基础管理中心提供
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def updateRelationByIdParam(self, request, context):
    """根据运营经理id，多个客户id修改客户和运营经理的绑定关系   暂为基础管理中心提供
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def selectCustomerInfo(self, request, context):
    """根据客户id查询客户名称以及客户权限(教育局，教育集团下属学校数)  暂为用户中心提供
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def listCustomerByCustomerType(self, request, context):
    """根据客户类型查询客户列表   暂为用户中心提供
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def listUnderLingSchoolAllInfo(self, request, context):
    """根据客户id查询下属学校的信息
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def listPcustomer(self, request, context):
    """根据客户id返回上级客户信息
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def listUnderLingSchool(self, request, context):
    """根据客户id返回下属学校数量(教育局,教育集团)
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def fuzzyQueryCustomer(self, request, context):
    """根据用户输入的学校名   模糊查询学校信息(id,学校名)
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def getCustomerInfo(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_CustomerListServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'searchCustomer': grpc.unary_unary_rpc_method_handler(
          servicer.searchCustomer,
          request_deserializer=CCCustomerListService__pb2.RequestCustomerSearch.FromString,
          response_serializer=CCCommonMessage__pb2.CCBatchDataPageMsg.SerializeToString,
      ),
      'insertCustomer': grpc.unary_unary_rpc_method_handler(
          servicer.insertCustomer,
          request_deserializer=CCCustomerListService__pb2.RequestCustomerInsert.FromString,
          response_serializer=CCCustomerListService__pb2.InsertReply.SerializeToString,
      ),
      'editCustomer': grpc.unary_unary_rpc_method_handler(
          servicer.editCustomer,
          request_deserializer=CCCustomerListService__pb2.RequestCustomerEdit.FromString,
          response_serializer=CCCommonMessage__pb2.ReplyMsg.SerializeToString,
      ),
      'updateCustomer': grpc.unary_unary_rpc_method_handler(
          servicer.updateCustomer,
          request_deserializer=CCCustomerListService__pb2.RequestCustomerUpdate.FromString,
          response_serializer=CCCustomerListService__pb2.BooleanReply.SerializeToString,
      ),
      'deleteCustomer': grpc.unary_unary_rpc_method_handler(
          servicer.deleteCustomer,
          request_deserializer=CCCustomerListService__pb2.RequestCustomerDelete.FromString,
          response_serializer=CCCustomerListService__pb2.BooleanReply.SerializeToString,
      ),
      'listOrgani': grpc.unary_unary_rpc_method_handler(
          servicer.listOrgani,
          request_deserializer=CCCustomerListService__pb2.RequestListOrgani.FromString,
          response_serializer=CCCommonMessage__pb2.CCBatchDataPageMsg.SerializeToString,
      ),
      'searchOrgani': grpc.unary_unary_rpc_method_handler(
          servicer.searchOrgani,
          request_deserializer=CCCustomerListService__pb2.RequestSearchOrgani.FromString,
          response_serializer=CCCommonMessage__pb2.ReplyMsg.SerializeToString,
      ),
      'insertOrgani': grpc.unary_unary_rpc_method_handler(
          servicer.insertOrgani,
          request_deserializer=CCCustomerListService__pb2.RequestInsertOrgani.FromString,
          response_serializer=CCCustomerListService__pb2.BooleanReply.SerializeToString,
      ),
      'editOrgani': grpc.unary_unary_rpc_method_handler(
          servicer.editOrgani,
          request_deserializer=CCCustomerListService__pb2.RequestEditOrgani.FromString,
          response_serializer=CCCommonMessage__pb2.ReplyMsg.SerializeToString,
      ),
      'updateOrgani': grpc.unary_unary_rpc_method_handler(
          servicer.updateOrgani,
          request_deserializer=CCCustomerListService__pb2.RequestUpdateOrgani.FromString,
          response_serializer=CCCustomerListService__pb2.BooleanReply.SerializeToString,
      ),
      'deleteOrgani': grpc.unary_unary_rpc_method_handler(
          servicer.deleteOrgani,
          request_deserializer=CCCustomerListService__pb2.RequestDeleteOrgani.FromString,
          response_serializer=CCCustomerListService__pb2.BooleanReply.SerializeToString,
      ),
      'updateBusinessStatus': grpc.unary_unary_rpc_method_handler(
          servicer.updateBusinessStatus,
          request_deserializer=CCCustomerListService__pb2.RequestUpdateBusiness.FromString,
          response_serializer=CCCustomerListService__pb2.BooleanReply.SerializeToString,
      ),
      'listBusinessInfo': grpc.unary_unary_rpc_method_handler(
          servicer.listBusinessInfo,
          request_deserializer=CCCustomerListService__pb2.RequestListBusinessInfo.FromString,
          response_serializer=CCCommonMessage__pb2.CCBatchDataPageMsg.SerializeToString,
      ),
      'addUnderLingSchool': grpc.unary_unary_rpc_method_handler(
          servicer.addUnderLingSchool,
          request_deserializer=CCCustomerListService__pb2.RequestAddUnderLingSchool.FromString,
          response_serializer=CCCustomerListService__pb2.BooleanReply.SerializeToString,
      ),
      'deleteUnderLingSchool': grpc.unary_unary_rpc_method_handler(
          servicer.deleteUnderLingSchool,
          request_deserializer=CCCustomerListService__pb2.RequestDeleteUnderLingSchool.FromString,
          response_serializer=CCCustomerListService__pb2.BooleanReply.SerializeToString,
      ),
      'listSchool': grpc.unary_unary_rpc_method_handler(
          servicer.listSchool,
          request_deserializer=CCCustomerListService__pb2.RequestListSchool.FromString,
          response_serializer=CCCommonMessage__pb2.ReplyMsg.SerializeToString,
      ),
      'listCommonConfig': grpc.unary_unary_rpc_method_handler(
          servicer.listCommonConfig,
          request_deserializer=CCCustomerListService__pb2.RequestCommonConfig.FromString,
          response_serializer=CCCommonMessage__pb2.ReplyMsg.SerializeToString,
      ),
      'selectCustomerNumByIdParam': grpc.unary_unary_rpc_method_handler(
          servicer.selectCustomerNumByIdParam,
          request_deserializer=CCCustomerListService__pb2.RequestSelectCustomerNumByIdParam.FromString,
          response_serializer=CCCustomerListService__pb2.ResponseSelectCustomerNumByIdParam.SerializeToString,
      ),
      'listSchoolByIdParam': grpc.unary_unary_rpc_method_handler(
          servicer.listSchoolByIdParam,
          request_deserializer=CCCustomerListService__pb2.RequestListSchoolByIdParam.FromString,
          response_serializer=CCCustomerListService__pb2.ResponseListSchoolByIdParam.SerializeToString,
      ),
      'updateRelationByIdParam': grpc.unary_unary_rpc_method_handler(
          servicer.updateRelationByIdParam,
          request_deserializer=CCCustomerListService__pb2.RequestUpdateRelationByIdParam.FromString,
          response_serializer=CCCustomerListService__pb2.BooleanReply.SerializeToString,
      ),
      'selectCustomerInfo': grpc.unary_unary_rpc_method_handler(
          servicer.selectCustomerInfo,
          request_deserializer=CCCustomerListService__pb2.RequestSelectCustomerInfo.FromString,
          response_serializer=CCCommonMessage__pb2.ReplyMsg.SerializeToString,
      ),
      'listCustomerByCustomerType': grpc.unary_unary_rpc_method_handler(
          servicer.listCustomerByCustomerType,
          request_deserializer=CCCustomerListService__pb2.RequestListCustomerByCustomerType.FromString,
          response_serializer=CCCommonMessage__pb2.ReplyMsg.SerializeToString,
      ),
      'listUnderLingSchoolAllInfo': grpc.unary_unary_rpc_method_handler(
          servicer.listUnderLingSchoolAllInfo,
          request_deserializer=CCCustomerListService__pb2.RequestListUnderLingSchoolAllInfo.FromString,
          response_serializer=CCCommonMessage__pb2.ReplyMsg.SerializeToString,
      ),
      'listPcustomer': grpc.unary_unary_rpc_method_handler(
          servicer.listPcustomer,
          request_deserializer=CCCustomerListService__pb2.RequestListPcustomer.FromString,
          response_serializer=CCCommonMessage__pb2.ReplyMsg.SerializeToString,
      ),
      'listUnderLingSchool': grpc.unary_unary_rpc_method_handler(
          servicer.listUnderLingSchool,
          request_deserializer=CCCustomerListService__pb2.RequestListUnderLingSchool.FromString,
          response_serializer=CCCommonMessage__pb2.ReplyMsg.SerializeToString,
      ),
      'fuzzyQueryCustomer': grpc.unary_unary_rpc_method_handler(
          servicer.fuzzyQueryCustomer,
          request_deserializer=CCCustomerListService__pb2.RequestFuzzyQueryCustomer.FromString,
          response_serializer=CCCommonMessage__pb2.ReplyMsg.SerializeToString,
      ),
      'getCustomerInfo': grpc.unary_unary_rpc_method_handler(
          servicer.getCustomerInfo,
          request_deserializer=CCCustomerListService__pb2.RequestCustomerInfo.FromString,
          response_serializer=CCCustomerListService__pb2.RespCustomerInfo.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'customercenter.CustomerListService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
