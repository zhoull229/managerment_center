# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import RCCommon_pb2 as RCCommon__pb2
import RCQuestionService_pb2 as RCQuestionService__pb2


class RCQuestionServiceStub(object):
  """定义服务
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.createQuestion = channel.unary_unary(
        '/resourcecenter.RCQuestionService/createQuestion',
        request_serializer=RCQuestionService__pb2.QuestionReq.SerializeToString,
        response_deserializer=RCCommon__pb2.SingleResp.FromString,
        )
    self.updateQuestion = channel.unary_unary(
        '/resourcecenter.RCQuestionService/updateQuestion',
        request_serializer=RCQuestionService__pb2.QuestionReq.SerializeToString,
        response_deserializer=RCCommon__pb2.EmptyResp.FromString,
        )
    self.deleteQuestion = channel.unary_unary(
        '/resourcecenter.RCQuestionService/deleteQuestion',
        request_serializer=RCQuestionService__pb2.SingleQuestionReq.SerializeToString,
        response_deserializer=RCCommon__pb2.EmptyResp.FromString,
        )
    self.querySingleQuestion = channel.unary_unary(
        '/resourcecenter.RCQuestionService/querySingleQuestion',
        request_serializer=RCQuestionService__pb2.SingleQuestionReq.SerializeToString,
        response_deserializer=RCCommon__pb2.SingleResp.FromString,
        )
    self.queryPageQuestion = channel.unary_unary(
        '/resourcecenter.RCQuestionService/queryPageQuestion',
        request_serializer=RCQuestionService__pb2.PageQuestionReq.SerializeToString,
        response_deserializer=RCCommon__pb2.PageResp.FromString,
        )
    self.queryReviewQuestion = channel.unary_unary(
        '/resourcecenter.RCQuestionService/queryReviewQuestion',
        request_serializer=RCQuestionService__pb2.ReviewQuestionPageReq.SerializeToString,
        response_deserializer=RCCommon__pb2.PageResp.FromString,
        )
    self.queryMyQuestion = channel.unary_unary(
        '/resourcecenter.RCQuestionService/queryMyQuestion',
        request_serializer=RCQuestionService__pb2.MyQuestionReq.SerializeToString,
        response_deserializer=RCCommon__pb2.PageResp.FromString,
        )


class RCQuestionServiceServicer(object):
  """定义服务
  """

  def createQuestion(self, request, context):
    """新建题(结果message StringValue)
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def updateQuestion(self, request, context):
    """更新题
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def deleteQuestion(self, request, context):
    """删除题
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def querySingleQuestion(self, request, context):
    """根据id查询题(结果message QuestionDetail)
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def queryPageQuestion(self, request, context):
    """分页查询(结果message Question4List)
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def queryReviewQuestion(self, request, context):
    """查询待审核/审核通过/不通过列表(结果message Question4List)
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def queryMyQuestion(self, request, context):
    """查询我建的题/我的分享(结果message Question4List)
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_RCQuestionServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'createQuestion': grpc.unary_unary_rpc_method_handler(
          servicer.createQuestion,
          request_deserializer=RCQuestionService__pb2.QuestionReq.FromString,
          response_serializer=RCCommon__pb2.SingleResp.SerializeToString,
      ),
      'updateQuestion': grpc.unary_unary_rpc_method_handler(
          servicer.updateQuestion,
          request_deserializer=RCQuestionService__pb2.QuestionReq.FromString,
          response_serializer=RCCommon__pb2.EmptyResp.SerializeToString,
      ),
      'deleteQuestion': grpc.unary_unary_rpc_method_handler(
          servicer.deleteQuestion,
          request_deserializer=RCQuestionService__pb2.SingleQuestionReq.FromString,
          response_serializer=RCCommon__pb2.EmptyResp.SerializeToString,
      ),
      'querySingleQuestion': grpc.unary_unary_rpc_method_handler(
          servicer.querySingleQuestion,
          request_deserializer=RCQuestionService__pb2.SingleQuestionReq.FromString,
          response_serializer=RCCommon__pb2.SingleResp.SerializeToString,
      ),
      'queryPageQuestion': grpc.unary_unary_rpc_method_handler(
          servicer.queryPageQuestion,
          request_deserializer=RCQuestionService__pb2.PageQuestionReq.FromString,
          response_serializer=RCCommon__pb2.PageResp.SerializeToString,
      ),
      'queryReviewQuestion': grpc.unary_unary_rpc_method_handler(
          servicer.queryReviewQuestion,
          request_deserializer=RCQuestionService__pb2.ReviewQuestionPageReq.FromString,
          response_serializer=RCCommon__pb2.PageResp.SerializeToString,
      ),
      'queryMyQuestion': grpc.unary_unary_rpc_method_handler(
          servicer.queryMyQuestion,
          request_deserializer=RCQuestionService__pb2.MyQuestionReq.FromString,
          response_serializer=RCCommon__pb2.PageResp.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'resourcecenter.RCQuestionService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
