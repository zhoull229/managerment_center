# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import RCCommon_pb2 as RCCommon__pb2
from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2
from google.protobuf import wrappers_pb2 as google_dot_protobuf_dot_wrappers__pb2


class RCQuestionPropServiceStub(object):
  """定义服务
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.listStylesBySubjectId = channel.unary_unary(
        '/resourcecenter.RCQuestionPropService/listStylesBySubjectId',
        request_serializer=google_dot_protobuf_dot_wrappers__pb2.Int32Value.SerializeToString,
        response_deserializer=RCCommon__pb2.ListResp.FromString,
        )
    self.listAbility = channel.unary_unary(
        '/resourcecenter.RCQuestionPropService/listAbility',
        request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
        response_deserializer=RCCommon__pb2.ListResp.FromString,
        )
    self.listHardDegree = channel.unary_unary(
        '/resourcecenter.RCQuestionPropService/listHardDegree',
        request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
        response_deserializer=RCCommon__pb2.ListResp.FromString,
        )
    self.listConceptType = channel.unary_unary(
        '/resourcecenter.RCQuestionPropService/listConceptType',
        request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
        response_deserializer=RCCommon__pb2.ListResp.FromString,
        )
    self.listSource = channel.unary_unary(
        '/resourcecenter.RCQuestionPropService/listSource',
        request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
        response_deserializer=RCCommon__pb2.ListResp.FromString,
        )
    self.getAbilityById = channel.unary_unary(
        '/resourcecenter.RCQuestionPropService/getAbilityById',
        request_serializer=google_dot_protobuf_dot_wrappers__pb2.Int32Value.SerializeToString,
        response_deserializer=RCCommon__pb2.SingleResp.FromString,
        )


class RCQuestionPropServiceServicer(object):
  """定义服务
  """

  def listStylesBySubjectId(self, request, context):
    """根据科目查询题目类型(结果message QuestionProp)
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def listAbility(self, request, context):
    """查询能力层次(结果message QuestionProp)
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def listHardDegree(self, request, context):
    """查询难度系数(结果message QuestionProp)
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def listConceptType(self, request, context):
    """查询概念题类(结果message QuestionProp)
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def listSource(self, request, context):
    """查询试题来源(结果message QuestionProp)
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def getAbilityById(self, request, context):
    """根据能力层次id查能力层次信息(结果message QuestionProp)
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_RCQuestionPropServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'listStylesBySubjectId': grpc.unary_unary_rpc_method_handler(
          servicer.listStylesBySubjectId,
          request_deserializer=google_dot_protobuf_dot_wrappers__pb2.Int32Value.FromString,
          response_serializer=RCCommon__pb2.ListResp.SerializeToString,
      ),
      'listAbility': grpc.unary_unary_rpc_method_handler(
          servicer.listAbility,
          request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
          response_serializer=RCCommon__pb2.ListResp.SerializeToString,
      ),
      'listHardDegree': grpc.unary_unary_rpc_method_handler(
          servicer.listHardDegree,
          request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
          response_serializer=RCCommon__pb2.ListResp.SerializeToString,
      ),
      'listConceptType': grpc.unary_unary_rpc_method_handler(
          servicer.listConceptType,
          request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
          response_serializer=RCCommon__pb2.ListResp.SerializeToString,
      ),
      'listSource': grpc.unary_unary_rpc_method_handler(
          servicer.listSource,
          request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
          response_serializer=RCCommon__pb2.ListResp.SerializeToString,
      ),
      'getAbilityById': grpc.unary_unary_rpc_method_handler(
          servicer.getAbilityById,
          request_deserializer=google_dot_protobuf_dot_wrappers__pb2.Int32Value.FromString,
          response_serializer=RCCommon__pb2.SingleResp.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'resourcecenter.RCQuestionPropService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
