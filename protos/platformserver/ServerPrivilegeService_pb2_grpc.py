# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import ServerCommonMessage_pb2 as ServerCommonMessage__pb2
import ServerPrivilegeService_pb2 as ServerPrivilegeService__pb2


class ServerPrivilegeServiceStub(object):
  """///////////////////////////////service//////////////////////////////////////
  基础管理中心响应客户中心请求
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.save = channel.unary_unary(
        '/platformserver.ServerPrivilegeService/save',
        request_serializer=ServerPrivilegeService__pb2.PrivilegeSaveRequest.SerializeToString,
        response_deserializer=ServerCommonMessage__pb2.Response.FromString,
        )
    self.update = channel.unary_unary(
        '/platformserver.ServerPrivilegeService/update',
        request_serializer=ServerPrivilegeService__pb2.PrivilegeUpdateRequest.SerializeToString,
        response_deserializer=ServerCommonMessage__pb2.Response.FromString,
        )
    self.delete = channel.unary_unary(
        '/platformserver.ServerPrivilegeService/delete',
        request_serializer=ServerPrivilegeService__pb2.PrivilegeDeleteRequest.SerializeToString,
        response_deserializer=ServerCommonMessage__pb2.Response.FromString,
        )
    self.findChild = channel.unary_unary(
        '/platformserver.ServerPrivilegeService/findChild',
        request_serializer=ServerPrivilegeService__pb2.FindChildRequest.SerializeToString,
        response_deserializer=ServerCommonMessage__pb2.Response.FromString,
        )
    self.findAll = channel.unary_unary(
        '/platformserver.ServerPrivilegeService/findAll',
        request_serializer=ServerPrivilegeService__pb2.FindAllPrivilegeRequest.SerializeToString,
        response_deserializer=ServerCommonMessage__pb2.Response.FromString,
        )
    self.findPrivilegeSelective = channel.unary_unary(
        '/platformserver.ServerPrivilegeService/findPrivilegeSelective',
        request_serializer=ServerPrivilegeService__pb2.FindPrivilegesRequest.SerializeToString,
        response_deserializer=ServerCommonMessage__pb2.Response.FromString,
        )
    self.findOne = channel.unary_unary(
        '/platformserver.ServerPrivilegeService/findOne',
        request_serializer=ServerPrivilegeService__pb2.FindOneRequest.SerializeToString,
        response_deserializer=ServerCommonMessage__pb2.Response.FromString,
        )


class ServerPrivilegeServiceServicer(object):
  """///////////////////////////////service//////////////////////////////////////
  基础管理中心响应客户中心请求
  """

  def save(self, request, context):
    """根据条件返回学制列表
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def update(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def delete(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def findChild(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def findAll(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def findPrivilegeSelective(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def findOne(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_ServerPrivilegeServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'save': grpc.unary_unary_rpc_method_handler(
          servicer.save,
          request_deserializer=ServerPrivilegeService__pb2.PrivilegeSaveRequest.FromString,
          response_serializer=ServerCommonMessage__pb2.Response.SerializeToString,
      ),
      'update': grpc.unary_unary_rpc_method_handler(
          servicer.update,
          request_deserializer=ServerPrivilegeService__pb2.PrivilegeUpdateRequest.FromString,
          response_serializer=ServerCommonMessage__pb2.Response.SerializeToString,
      ),
      'delete': grpc.unary_unary_rpc_method_handler(
          servicer.delete,
          request_deserializer=ServerPrivilegeService__pb2.PrivilegeDeleteRequest.FromString,
          response_serializer=ServerCommonMessage__pb2.Response.SerializeToString,
      ),
      'findChild': grpc.unary_unary_rpc_method_handler(
          servicer.findChild,
          request_deserializer=ServerPrivilegeService__pb2.FindChildRequest.FromString,
          response_serializer=ServerCommonMessage__pb2.Response.SerializeToString,
      ),
      'findAll': grpc.unary_unary_rpc_method_handler(
          servicer.findAll,
          request_deserializer=ServerPrivilegeService__pb2.FindAllPrivilegeRequest.FromString,
          response_serializer=ServerCommonMessage__pb2.Response.SerializeToString,
      ),
      'findPrivilegeSelective': grpc.unary_unary_rpc_method_handler(
          servicer.findPrivilegeSelective,
          request_deserializer=ServerPrivilegeService__pb2.FindPrivilegesRequest.FromString,
          response_serializer=ServerCommonMessage__pb2.Response.SerializeToString,
      ),
      'findOne': grpc.unary_unary_rpc_method_handler(
          servicer.findOne,
          request_deserializer=ServerPrivilegeService__pb2.FindOneRequest.FromString,
          response_serializer=ServerCommonMessage__pb2.Response.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'platformserver.ServerPrivilegeService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
